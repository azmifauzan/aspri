version: '3.8'

services:
  db:
    image: mariadb:11.8
    environment:
      MYSQL_DATABASE: aspri_db
      MYSQL_USER: aspri_user
      MYSQL_PASSWORD: aspri_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aspri-network

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    environment:
      CHROMA_SERVER_HOST: 0.0.0.0
      CHROMA_SERVER_PORT: 8000
    volumes:
      - chromadb_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aspri-network

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - aspri-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: mysql+aiomysql://aspri_user:aspri_password@db:3306/aspri_db
      SECRET_KEY: your-secret-key-change-in-production
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      GOOGLE_API_KEY: your-google-ai-api-key
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_SECURE: false
      MINIO_BUCKET_NAME: documents
      CHROMADB_HOST: chromadb
      CHROMADB_PORT: 8000
      CHROMADB_COLLECTION_NAME: document_embeddings
    ports:
      - "8888:8888"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        alembic upgrade head &&
        python scripts/init_config.py &&
        uvicorn app.main:app --host 0.0.0.0 --port 8888 --reload
      "
    networks:
      - aspri-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - aspri-network

volumes:
  mariadb_data:
  minio_data:
  chromadb_data:

networks:
  aspri-network:
    driver: bridge